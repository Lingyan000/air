name: Build/release

on: push

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest]
        architecture: [x86, x64]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v2
        with:
          node-version: 16
          architecture: ${{ matrix.architecture }}

      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.TOKEN }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}

          args: '--config electron-builder.config.js --config.asar=false'
        env:
          VITE_HK_PRIVATE_KEY: ${{ secrets.HK_PRIVATE_KEY }}

      - name: Prepare artifact
        if: success()
        id: prepareArtifact
        run: |
          $airSetupName=ls 'dist/空气 Setup *.exe';$airSetupName=$airSetupName[0].Name.replace('.exe', '');echo "::set-output name=airSetupName::$airSetupName"

      - name: Upload air
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.prepareArtifact.outputs.airSetupName }}-${{ matrix.architecture }}
          path: './dist/*.exe'

      - name: Post to channel
        if: ${{ github.event_name != 'pull_request' && success() && github.ref == 'refs/heads/main' }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ${{ github.actor }} created commit:
            Commit message: ${{ github.event.commits[0].message }}

            Repository: ${{ github.repository }}

            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
          document: ${{ github.workspace }}/dist/${{ steps.prepareArtifact.outputs.airSetupName }}.exe
